#include<iostream> 

using namespace std; 

  

class Contact { 

private: 

    string _name; 

    string _last_name; 

    string _email; 

    string _phone_number; 

    /*Methods*/ 

public: 

    void set_name(string name_temp); 

    string get_name(); 

    Contact(const std::string& name, const std::string& phone_number) {
        _name = name;
        _phone_number = phone_number;
    }
}; 


class Organizer {
    private:
        std::map<int, Contact*> map;
        int _id;

    public: 
       void create_contact(string name, string phone_number) {
            Contact* contact = new Contact(name, phone_number);  
            map[_id] = contact;
            ++_id;
       }

       void delete_contact(int id) {

       }

       void display_contacts(void) {
           for (auto& it : map) {
               std::cout << "The name of the contact for id: " << it.first << " is: " << it.second->get_name();
           }
       }
}

Contact* new_node() {   
     UserData *ptr = new UserData();
     return ptr;
}  

void UserData::set_name(string name_temp) 

{ 

    name = name_temp; 

} 

  

string UserData::get_name() 

{ 

    return name; 

} 

  

int main(void) 

{ 

    int option; 

    UserData *ptr_node;
    string name; 

    Organizer org;


    do { 

        cout << "Directorio Telefonico\n"; 

        cout << "Seleccione una opcion:\n\n"; 

        cout << "1. Agregar Nuevo\n\n"; 

        cout << "Seleccione:"; 

        cin >> option; 

  

        switch (option) 

        { 

        case 1:  
            ptr_node = new_node();
            system("cls"); 

            cout << "Nombre:"; 

            cin >> name; 

            ptr_node->set_name(name); 

            cout << ptr_node->get_name(); 

            system("pause"); 

        } 

    } while (option != 4); 

} 